<?php
/**
 * @file
 * Authenticate UFRPE associates
 *
 * Allow user to authenticate and return user infos
 * for use in the CPA webform
 */

// Importing functions from auth_ufrpe.inc
require_once 'auth_ufrpe.inc';

/**
 * Implementation of hook_menu().
 */

function auth_ufrpe_menu()
{
  $items['admin/config/system/auth_ufrpe/settings'] = array(
    'title' => 'Configurar autenticação UFRPE',
    'description' => 'Configurar módulo de autenticação',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('auth_ufrpe_settings_form'),
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('administer site configuration'),
    'file' => 'auth_ufrpe.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_block_info()
 */

function auth_ufrpe_block_info()
{
  $blocks['auth_ufrpe'] = array(
    'info' => t('Autenticação CPA'),
    'cache' => DRUPAL_CACHE_GLOBAL,
  );

  return $blocks;
}

/**
 * Implementation of hook_block_views()
 */

function auth_ufrpe_block_view($delta='')
{
  $block = array();

  if ($delta == 'auth_ufrpe') {
    if (drupal_is_front_page()) {
      $block['subject'] = t('Autenticação CPA');
      $block['content'] = drupal_get_form('auth_ufrpe_form');
    }
  }

  return $block;
}

/**
 * Implementation of hook_token_info()
 */

function auth_ufrpe_token_info()
{
  $info = array();

  $info['types'] = array(
    // [current-auth:]
    'current-auth' => array(
      'name' => t('Current user'),
      'description' => t('Current authenticated user.'),
    ),
  );

  $info['tokens'] = array(
    'current-auth' => array(
      // [current-auth:cpf]
      'cpf' => array(
        'name' => t('CPF'),
        'description' => t('The Register for Physical Person of the current user.')
      ),
      // [current-auth:nome]
      'nome' => array(
        'name' => t('Name'),
        'description' => t('The name of the current user.'),
      ),
    ),
  );

  return $info;
}

/**
 * Implementation of hook_tokens()
 */

function auth_ufrpe_tokens($type, $tokens, $data = array(), $options = array())
{
  $replacements = array();
  drupal_session_start();

  if ($type == 'current-auth') {
    foreach ($tokens as $name => $original) {
      switch ($name) {
        case 'cpf':
          $replacements[$original] = $_SESSION['cpf'];
          break;
        case 'nome':
          $replacements[$original] = $_SESSION['nome'];
          break;
      }
    }
  }

  return $replacements;
}
